name: Build the PR

on:
  push:
    branches: [ "main" ]
    paths:
      - 'code/**'
      - 'test/**'
      - 'DB/Schemas/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'code/**'
      - 'test/**'
      - 'DB/Schemas/**'
    branches:
      - master
      - main  # Added main branch for completeness
  workflow_dispatch:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual build request'

jobs:
  build:
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
      
      - name: Cache pip packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install --no-cache-dir -r requirements.txt

      - name: Run tests
        run: |
            python ./test/test.py

      - name: Run Pylint
        run: |
          python -m flake8 .
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ vars.DOCKERHUB_USERNAME }}/studentapi:v${{ github.sha }}

      - name: Trigger CD workflow in another repository
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: venk404/venk404-Implementing-Continuous-Delivery-with-ArgoCD
          event-type: update-image
          client-payload: '{"image_tag": "${{ github.sha }}", "repository": "${{ github.repository }}"}'