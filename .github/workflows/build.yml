name: Build the PR

on:
  push:
    branches: [ "main" ]
    paths:
      - 'code/**'
      - 'test/**'
      - 'DB/Schemas/**'
  pull_request:
    types: [opened, synchronize, reopened]
    paths:
      - 'code/**'
      - 'test/**'
      - 'DB/Schemas/**'
    branches:
      - master
      - main  # Added main branch for completeness
  workflow_dispatch:
      reason:
        description: 'Reason for manual trigger'
        required: false
        default: 'Manual build request'

jobs:
  build:
    runs-on: self-hosted
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  
      
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.13'
    
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          # Use local pip cache instead of GitHub Actions cache
          pip install -r requirements.txt

      - name: Run tests
        run: |
            python ./test/test.py

      - name: Run Pylint
        run: |
          python -m flake8 .
      
      - name: Get version tags
        id: get_versions
        run: |
          RESTAPI_VERSION=$(cat code/version.txt 2>/dev/null || echo "0.0.0")
          MIGRATION_VERSION=$(cat DB/Schemas/version.txt 2>/dev/null || echo "0.0.0")
          echo "RESTAPI_VERSION=$RESTAPI_VERSION" >> $GITHUB_OUTPUT
          echo "MIGRATION_VERSION=$MIGRATION_VERSION" >> $GITHUB_OUTPUT
        shell: bash

      - name: Check changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          files: |
            code/**
            test/**
            DB/Schemas/**
          
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push REST API image
        if: steps.changed-files.outputs.any_changed == 'true' && (contains(steps.changed-files.outputs.changed_files, 'code/') || contains(steps.changed-files.outputs.changed_files, 'test/'))
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./code/Dockerfile
          push: true
          tags: docker.io/${{ vars.DOCKERHUB_USERNAME }}/studentapi:${{ steps.get_versions.outputs.RESTAPI_VERSION }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.get_versions.outputs.RESTAPI_VERSION }}

      - name: Build and push migrations image
        if: steps.changed-files.outputs.any_changed == 'true' && contains(steps.changed-files.outputs.changed_files, 'DB/Schemas/')
        uses: docker/build-push-action@v6
        with:
          context: ./DB/Schemas
          file: ./DB/Schemas/Dockerfile
          push: true
          tags: docker.io/${{ vars.DOCKERHUB_USERNAME }}/db_migration:${{ steps.get_versions.outputs.MIGRATION_VERSION }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.version=${{ steps.get_versions.outputs.MIGRATION_VERSION }}
      - name: Build client payload
        if: steps.changed-files.outputs.any_changed == 'true'
        id: build-payload
        run: |
          payload=$(cat << 'EOF'
          {
            "restapi_version": "${{ steps.get_versions.outputs.RESTAPI_VERSION }}",
            "migration_version": "${{ steps.get_versions.outputs.MIGRATION_VERSION }}",
            "repository": "${{ github.repository }}",
            "images": []
          }
          EOF
          )
          
          # Add REST API image if code/test files changed
          if [[ "${{ contains(steps.changed-files.outputs.changed_files, 'code/') || contains(steps.changed-files.outputs.changed_files, 'test/') }}" == "true" ]]; then
            payload=$(echo "$payload" | jq '.images += ["docker.io/${{ vars.DOCKERHUB_USERNAME }}/studentapi:${{ steps.get_versions.outputs.RESTAPI_VERSION }}"]')
          fi
          
          # Add migration image if DB schema files changed
          if [[ "${{ contains(steps.changed-files.outputs.changed_files, 'DB/Schemas/') }}" == "true" ]]; then
            payload=$(echo "$payload" | jq '.images += ["docker.io/${{ vars.DOCKERHUB_USERNAME }}/db_migration:${{ steps.get_versions.outputs.MIGRATION_VERSION }}"]')
          fi
          
          echo "payload<<EOF" >> $GITHUB_OUTPUT
          echo "$payload" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      - name: Trigger CD workflow in another repository
        if: steps.changed-files.outputs.any_changed == 'true'
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}
          repository: venk404/venk404-Implementing-Continuous-Delivery-with-ArgoCD
          event-type: update-image
          client-payload: ${{ steps.build-payload.outputs.payload }}